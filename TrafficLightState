import java.util.HashMap;
import java.util.Map;

public class TrafficLightHandler {
    public static void main(String[] args){
        
        // do a while loop and keep thread running for that musch amount of duration

    }
}

class TrafficLight{
    Color currentSignal;
    TrafficLightState currState; // denoting current state
    Map<Color, TrafficLightState> map;
    public TrafficLight(TrafficLightState state){
        this.currentSignal = state.getSignal();
        this.map = new HashMap<>();
        map.put(Color.RED, new RedLightState());
        map.put(Color.GREEN, new GreenLightState());
        map.put(Color.YELLOW, new YellowLightState());
    }

    public TrafficLightState getNextState(TrafficLightState state){
        if( state instanceof RedLightState)
            return map.get(Color.RED.RED);
        else if( state instanceof GreenLightState )
            return map.get(Color.GREEN);
        else if( state instanceof YellowLightState)
            return map.get(Color.YELLOW);
        return map.get(Color.RED);
    }
}

enum Color {
    RED, GREEN, YELLOW;
}


interface TrafficLightState{
    public void lighten(TrafficLight trafficLight);
    public Color getSignal();
    public void getDuration();
}



  class RedLightState implements TrafficLightState{
    private final Color signal = Color.RED;
    @Override
    public void lighten(TrafficLight trafficLight){
        trafficLight.currentSignal = signal;
        trafficLight.currState = trafficLight.map.get(signal);
        }

      @Override
      public Color getSignal() {
          return null;
      }

      @Override
      public long getDuration() {

      }

  }


class GreenLightState implements TrafficLightState{
    private final Color signal = Color.GREEN;
    @Override
    public void lighten(TrafficLight trafficLight){
        trafficLight.currentSignal = signal;
        trafficLight.currState = trafficLight.map.get(signal);
    }

    @Override
    public Color getSignal() {
        return null;
    }

    @Override
    public long getDuration() {
        return 2000;

    }
}



 class YellowLightState implements TrafficLightState{
     private final Color signal = Color.YELLOW;
     @Override
    public void lighten(TrafficLight trafficLight){
        trafficLight.currentSignal = signal;
        trafficLight.currState = trafficLight.map.get(signal);
    }

     @Override
     public Color getSignal() {
         return null;
     }

     @Override
     public void getDuration() {

     }

 }


